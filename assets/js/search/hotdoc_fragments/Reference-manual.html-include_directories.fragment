fragment_downloaded_cb({"url": "Reference-manual.html#include_directories", "fragment": "include_directories \nReturns an opaque object which contains the directories relative to the current directory given in the positional arguments. The result can then be passed to the include_directories keyword argument when building executables or libraries. You can use the returned object in any subdirectory you want Meson will make the paths work automatically. \nNote that this function call itself does not add the directories into the search path since there is no global search path. For something like that see add_project_arguments \nEach directory given is converted to two include paths one that is relative to the source root and one relative to the build root. \nFor example with the following source tree layout in home user project.git \nmeson.build \ninclude meson.build \nsrc meson.build \nIf the build tree is tmp build tree the following include paths will be used in the executable call I tmp build tree src include I home user project.git src include. \nThis function has one keyword argument is_system which if set flags the specified directories as system directories. This means that they will be used with the isystem compiler argument rather than I on compilers that support this flag in practice everything except Visual Studio \n"});