fragment_downloaded_cb({"url": "Meson-sample.html#meson-sample", "fragment": "Meson sample \nA Meson file that builds an executable looks like this. \nAll Meson build definitions begin with the project command. It specifies the name of the project and what programming languages it uses. Here the project is called simple and it uses only the C programming language. All strings are single quoted. \nOn the next line we define a build target in this case an executable called myexe. It consists of one source file. This is all the code that a user needs to write to compile an executable with Meson. \nVariables are fully supported. The above code snippet could also have been declared like this. \nMost executables consist of more than one source file. The easiest way to deal with this is to put them in an array. \nMeson also supports the notion of keyword arguments. Indeed most arguments to functions can only be passed using them. The above snippet could be rewritten like this. \nThese two formats are equivalent and choosing one over the other is mostly a question of personal preference. \nThe executable command actually returns an executable object which represents the given build target. It can be passed on to other functions like this. \nHere we create a unit test called simple test and which uses the built executable. When the tests are run with the ninja test command the built executable is run. If it returns zero the test passes. A non zero return value indicates an error which Meson will then report to the user. \n"});