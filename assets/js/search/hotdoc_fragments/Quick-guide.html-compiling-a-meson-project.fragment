fragment_downloaded_cb({"url": "Quick-guide.html#compiling-a-meson-project", "fragment": "Compiling a Meson project \nThe most common use case of Meson is compiling code on a code base you are working on. The steps to take are very simple. \nThe only thing to note is that you need to create a separate build directory. Meson will not allow you to build source code inside your source tree. All build artifacts are stored in the build directory. This allows you to have multiple build trees with different configurations at the same time. This way generated files are not added into revision control by accident. \nTo recompile after code changes just type ninja. The build command is always the same. You can do arbitrary changes to source code and build system files and Meson will detect those and will do the right thing. If you want to build optimized binaries just use the argument buildtype debugoptimized when running Meson. It is recommended that you keep one build directory for unoptimized builds and one for optimized ones. To compile any given configuration just go into the corresponding build directory and run ninja. \nMeson will automatically add compiler flags to enable debug information and compiler warnings i.e. g and Wall This means the user does not have to deal with them and can instead focus on coding. \n"});