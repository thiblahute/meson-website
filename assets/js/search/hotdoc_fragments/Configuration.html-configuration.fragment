fragment_downloaded_cb({"url": "Configuration.html#configuration", "fragment": "Configuration \nIf there are multiple configuration options passing them through compiler flags becomes very burdensome. It also makes the configuration settings hard to inspect. To make things easier Meson supports the generation of configure files. This feature is similar to one found in other build systems such as CMake. \nSuppose we have the following Meson snippet \nand that the contents of config.h.in are \nMeson will then create a file called config.h in the corresponding build directory whose contents are the following. \nMore specifically Meson will find all strings of the type varname and replace them with respective values set in conf_data. You can use a single configuration_data object as many times as you like but it becomes immutable after the first use. That is after it has been used once the set function becomes unusable and trying to call it causes an error. \nFor more complex configuration file generation Meson provides a second form. To use it put a line like this in your configuration file. \nThe replacement that happens depends on what the value and type of TOKEN is \nNote that if you want to define a C string you need to do the quoting yourself like this \nSince this is such a common operation Meson provides a convenience method \nOften you have a boolean value in Meson but need to define the C C token as or Meson provides a convenience function for this use case. \n"});