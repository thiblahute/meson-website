fragment_downloaded_cb({"url": "Configuring-a-build-directory.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"Configuring-a-build-directory.md\">\n<h1 id=\"configuring-a-build-directory\">Configuring a build directory</h1>\n<p>Often you want to change the settings of your build after it has been generated. For example you might want to change from a debug build into a release build, set custom compiler flags, change the build options provided in your <code>meson_options.txt</code> file and so on.</p>\n<p>The main tool for this is the <code>mesonconf</code> script. You may also use the <code>mesongui</code> graphical application if you want. However this document describes the use of the command line client.</p>\n<p>You invoke <code>mesonconf</code> by giving it the location of your build dir. If omitted, the current working directory is used instead. Here's a sample output for a simple project.</p>\n<pre><code>Core properties\n\nSource dir /home/jpakkane/clangdemo/2_address\nBuild dir  /home/jpakkane/clangdemo/2_address/buildmeson\n\nCore options\n\ntype     Build type          debug\nstrip    Strip on install    False\ncoverage Coverage report     False\npch      Precompiled headers True\nunity    Unity build         False\n\nCompiler flags\n\ncflags []\n\nLinker flags\n\nclinkflags []\n\nDirectories\n\ninstallprefix Install prefix        /usr/local\nlibdir        Library directory     lib\nbindir        Binary directory      bin\nincludedir    Header directory      include\ndatadir       Data directory        share\nmandir        Man page directory    share/man\nlocaledir     Locale file directory share/locale\n\nThis project does not have any options\n</code></pre>\n<p>These are all the options available for the current project arranged into related groups. The first column in every field is the name of the option. To set an option you use the <code>-D</code> option. For example, changing the installation prefix from <code>/usr/local</code> to <code>/tmp/testroot</code> you would issue the following command.</p>\n<pre><code>mesonconf -Dprefix=/tmp/testroot\n</code></pre>\n<p>Then you would run your build command (usually <code>ninja</code>), which would cause Meson to detect that the build setup has changed and do all the work required to bring your build tree up to date.</p>\n\n</div>\n\n\n        "});