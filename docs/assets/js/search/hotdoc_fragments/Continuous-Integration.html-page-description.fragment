fragment_downloaded_cb({"url": "Continuous-Integration.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"Continuous-Integration.md\">\n<h1 id=\"continous-integration\">Continous Integration</h1>\n<p>Here you will find snippets to use Meson with various CI such as Travis and Appveyor.</p>\n<p>Please <a href=\"https://github.com/mesonbuild/meson/issues/new\">file an issue</a> if these instructions don't work for you.</p>\n<h2 id=\"travis-for-os-x-and-linux-with-docker\">Travis for OS X and Linux (with Docker)</h2>\n<p>Travis for Linux provides ancient versions of Ubuntu which will likely cause problems building your projects regardless of which build system you're using. We recommend using Docker to get a more-recent version of Ubuntu and installing Ninja, Python3, and Meson inside it.</p>\n<p>This <code>yml</code> file is derived from the <a href=\"https://github.com/mesonbuild/meson/blob/master/.travis.yml\">configuration used by Meson for running its own tests</a>.</p>\n<pre><code class=\"language-yaml\">sudo: false\n\nos:\n  - linux\n  - osx\n\nlanguage:\n  - cpp\n\nservices:\n  - docker\n\nbefore_install:\n  - if [[ \"$TRAVIS_OS_NAME\" == \"osx\" ]]; then brew update; fi\n  - if [[ \"$TRAVIS_OS_NAME\" == \"osx\" ]]; then brew install ninja python3; fi\n  - if [[ \"$TRAVIS_OS_NAME\" == \"osx\" ]]; then pip3 install meson; fi\n  - if [[ \"$TRAVIS_OS_NAME\" == \"linux\" ]]; then docker pull YOUR/REPO:yakkety; fi\n\nscript:\n  - if [[ \"$TRAVIS_OS_NAME\" == \"linux\" ]]; then echo FROM YOUR/REPO:yakkety &gt; Dockerfile; fi\n  - if [[ \"$TRAVIS_OS_NAME\" == \"linux\" ]]; then echo ADD . /root &gt;&gt; Dockerfile; fi\n  - if [[ \"$TRAVIS_OS_NAME\" == \"linux\" ]]; then docker build -t withgit .; fi\n  - if [[ \"$TRAVIS_OS_NAME\" == \"linux\" ]]; then docker run withgit /bin/sh -c \"cd /root &amp;&amp; TRAVIS=true CC=$CC CXX=$CXX meson build &amp;&amp; ninja -C build test\"; fi\n  - if [[ \"$TRAVIS_OS_NAME\" == \"osx\" ]]; then SDKROOT=$(xcodebuild -version -sdk macosx Path) meson build &amp;&amp; ninja -C build test; fi\n</code></pre>\n<h2 id=\"appveyor-for-windows\">AppVeyor for Windows</h2>\n<p>For CI on Windows, <a href=\"https://www.appveyor.com/\">AppVeyor</a> is probably your best bet. Here's a sample <code>yml</code> file for use with that.</p>\n<pre><code class=\"language-yaml\">os: Visual Studio 2015\n\nmatrix:\n  - arch: x86\n    compiler: msvc2010\n  - arch: x86\n    compiler: msvc2015\n  - arch: x64\n    compiler: msvc2015\n\nplatform:\n  - x64\n\ninstall:\n  # Use the x86 python only when building for x86 for the cpython tests.\n  # For all other archs (including, say, arm), use the x64 python.\n  - ps: (new-object net.webclient).DownloadFile('https://dl.dropboxusercontent.com/u/37517477/ninja.exe', 'C:\\projects\\meson\\ninja.exe')\n  - cmd: if %arch%==x86 (set MESON_PYTHON_PATH=C:\\python34) else (set MESON_PYTHON_PATH=C:\\python34-x64)\n  - cmd: echo Using Python at %MESON_PYTHON_PATH%\n  - cmd: %MESON_PYTHON_PATH%\\pip install meson\n  - cmd: if %compiler%==msvc2010 ( call \"C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\vcvarsall.bat\" %arch% )\n  - cmd: if %compiler%==msvc2015 ( call \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\vcvarsall.bat\" %arch% )\n\nbuild_script:\n  - cmd: echo Building on %arch% with %compiler%\n  - cmd: PATH=%cd%;%MESON_PYTHON_PATH%;%PATH%; &amp;&amp; python meson.py --backend=ninja build\n  - cmd: PATH=%cd%;%MESON_PYTHON_PATH%;%PATH%; &amp;&amp; ninja -C build\n\ntest_script:\n  - cmd: PATH=%cd%;%MESON_PYTHON_PATH%;%PATH%; &amp;&amp; ninja -C build test\n</code></pre>\n<h2 id=\"travis-without-docker\">Travis without Docker</h2>\n<p>This setup is not recommended but included here for completeness</p>\n<pre><code class=\"language-yaml\">sudo: false\nlanguage: cpp\ngroup: beta\n\nmatrix:\n  include:\n    - os: linux\n      dist: trusty\n    - os: osx\n\ninstall:\n  - export PATH=\"`pwd`/build:${PATH}\"\n  - if [[ \"$TRAVIS_OS_NAME\" == \"osx\" ]]; then brew update &amp;&amp; brew install python3 ninja; fi\n  - if [[ \"$TRAVIS_OS_NAME\" == \"linux\" ]]; then wget https://github.com/ninja-build/ninja/releases/download/v1.7.2/ninja-linux.zip &amp;&amp; unzip -q ninja-linux.zip -d build; fi\n  - pip3 install meson\n\nscript:\n  - meson build\n  - ninja -C build\n  - ninja -C build test\n</code></pre>\n\n</div>\n\n\n        "});