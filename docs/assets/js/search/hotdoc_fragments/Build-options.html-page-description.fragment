fragment_downloaded_cb({"url": "Build-options.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"Build-options.md\">\n<h1 id=\"build-options\">Build options</h1>\n<p>Most non-trivial builds require user-settable options. As an example a program may have two different data backends that are selectable at build time. Meson provides for this by having a option definition file. Its name is <code>meson_options.txt</code> and it is placed at the root of your source tree.</p>\n<p>Here is a simple option file.</p>\n<pre><code class=\"language-meson\">option('someoption', type : 'string', value : 'optval', description : 'An option')\noption('other_one', type : 'boolean', value : false)\noption('combo_opt', type : 'combo', choices : ['one', 'two', 'three'], value : 'three')\n</code></pre>\n<p>This demonstrates the three basic option types and their usage. String option is just a free form string and a boolean option is, unsurprisingly, true or false. The combo option can have any value from the strings listed in argument <code>choices</code>. If <code>value</code> is not set, it defaults to empty string for strings, <code>true</code> for booleans or the first element in a combo. You can specify <code>description</code>, which is a free form piece of text describing the option. It defaults to option name.</p>\n<p>These options are accessed in Meson code with the <code>get_option</code> function.</p>\n<pre><code class=\"language-meson\">optval = get_option('opt_name')\n</code></pre>\n<p>This function also allows you to query the value of Meson's built-in project options. For example, to get the installation prefix you would issue the following command:</p>\n<pre><code class=\"language-meson\">prefix = get_option('prefix')\n</code></pre>\n<p>It should be noted that you can not set option values in your Meson scripts. They have to be set externally with the <code>mesonconf</code> command line tool. Running <code>mesonconf</code> without arguments in a build dir shows you all options you can set. To change their values use the <code>-D</code> option:</p>\n<pre><code class=\"language-console\">$ mesonconf -Doption=newvalue\n</code></pre>\n\n</div>\n\n\n        "});